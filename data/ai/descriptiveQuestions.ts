// data/ai/descriptiveQuestions.ts
import { DescriptiveQuestion } from "../../types";

export const aiDescriptiveQuestions: DescriptiveQuestion[] = [
  {
    id: "aidq1",
    question: "یک عامل هوشمند از چه اجزایی تشکیل شده است؟",
    answer:
      "فکر کنید یک ربات جاروبرقی یک 'عامل' است. محیطش 'اتاق' است. 'سنسورهای' آن (مثل دوربین) اتاق را می‌بینند و 'محرک‌هایش' (چرخ‌ها و برس) اتاق را تمیز می‌کنند. پس هر عامل یک بخش برای درک محیط (حسگر) و یک بخش برای انجام کار (محرک) دارد.",
  },
  {
    id: "aidq2",
    question: "تفاوت اصلی یک محیط 'پویا' (Dynamic) با 'ایستا' (Static) چیست؟",
    answer:
      "در محیط 'ایستا'، دنیا منتظر شما می‌ماند. مثل یک صفحه شطرنج که تا شما حرکت نکنید، هیچ چیز تغییر نمی‌کند. در محیط 'پویا'، دنیا کار خودش را می‌کند. مثل رانندگی در ترافیک که حتی اگر شما بایستید، ماشین‌های دیگر همچنان حرکت می‌کنند.",
  },
  {
    id: "aidq3",
    question: "چرا یک عامل در محیط 'مشاهده‌پذیر جزئی' به حافظه نیاز دارد؟",
    answer:
      "چون همه چیز را در لحظه نمی‌بیند. مثل رانندگی که شما از نقاط کور خبر ندارید. عامل باید به حافظه‌اش رجوع کند (مثلاً به خاطر بسپارد که یک ماشین چند لحظه پیش کنارش بود) تا بتواند تصمیم درستی بگیرد.",
  },
  {
    id: "aidq4",
    question:
      "تفاوت یک محیط 'قطعی' (Deterministic) با 'تصادفی' (Stochastic) چیست؟",
    answer:
      "در محیط 'قطعی'، نتیجه کارها صددرصد مشخص است. مثل انداختن یک سنگ که همیشه به زمین می‌افتد. در محیط 'تصادفی'، نتیجه کارها شانسی است. مثل انداختن تاس که نمی‌دانید چه عددی می‌آید.",
  },
  {
    id: "aidq5",
    question:
      "تفاوت عامل 'هدف‌محور' و عامل 'مبتنی بر سودمندی' را با مثال توضیح دهید.",
    answer:
      "'عامل هدف‌محور' فقط می‌خواهد به مقصد برسد. مثل یک GPS که فقط یک مسیر به شما می‌دهد. 'عامل مبتنی بر سودمندی' می‌خواهد به *بهترین شکل ممکن* به مقصد برسد. مثل یک GPS که مسیری را می‌دهد که هم سریع‌ترین، هم کوتاه‌ترین و هم بدون ترافیک باشد.",
  },
  {
    id: "aidq6",
    question: "چرا یک عامل 'واکنشی ساده' برای رانندگی مناسب نیست؟",
    answer:
      "چون این عامل حافظه ندارد و فقط به چیزی که همان لحظه می‌بیند واکنش نشان می‌دهد. برای رانندگی، شما باید به خاطر بسپارید که چراغ قرمز بود یا یک ماشین در حال سبقت گرفتن بود؛ کارهایی که این عامل از پس آن برنمی‌آید.",
  },
  {
    id: "aidq7",
    question:
      "دو روش جستجوی 'عمق-اول (DFS)' و 'عرض-اول (BFS)' را با مثال پیدا کردن کلید در یک ساختمان چند طبقه مقایسه کنید.",
    answer:
      "روش DFS: شما اول به طبقه آخر می‌روید و تمام اتاق‌های آن را می‌گردید و سپس طبقه به طبقه پایین می‌آیید. روش BFS: شما اول تمام اتاق‌های طبقه اول، سپس تمام اتاق‌های طبقه دوم و به همین ترتیب سطح به سطح بالا می‌روید.",
  },
  {
    id: "aidq8",
    question: "مفهوم 'هیوریستیک (Heuristic)' در جستجوی آگاهانه چیست؟",
    answer:
      "هیوریستیک یک 'سرنخ یا تخمین هوشمندانه' است. مثل اینکه وقتی دنبال رستوران می‌گردید، به صورت حدسی به خیابان‌های شلوغ‌تر بروید چون احتمال وجود رستوران آنجا بیشتر است. این تخمین جستجوی شما را سریع‌تر می‌کند.",
  },
  {
    id: "aidq9",
    question:
      "چرا الگوریتم A* معمولاً بهتر از جستجوی حریصانه (Greedy) عمل می‌کند؟",
    answer:
      "چون 'جستجوی حریصانه' فقط به تخمین راه باقی‌مانده تا مقصد نگاه می‌کند و ممکن است شما را در یک مسیر طولانی گیر بیندازد. اما 'A*' هم راهی که تا الان آمده‌اید و هم تخمین راه باقی‌مانده را با هم حساب می‌کند و تصمیم هوشمندانه‌تری می‌گیرد.",
  },
  {
    id: "aidq10",
    question: "نقش 'منطق' در یک بازی ویدیویی چیست؟",
    answer:
      "منطق، همان قوانین 'علت و معلولی' دنیای بازی است. مثلاً 'اگر کلید را برداری، در باز می‌شود'. این قوانین باعث می‌شوند دنیای بازی برای بازیکن قابل درک و باورپذیر باشد.",
  },
  {
    id: "aidq11",
    question: "'استنتاج (Reasoning)' به چه دردی می‌خورد؟",
    answer:
      "استنتاج یعنی 'نتیجه‌گیری از دانسته‌ها'. به یک شخصیت بازی اجازه می‌دهد بدون اینکه برایش همه چیز را از قبل تعریف کرده باشیم، خودش تصمیم هوشمندانه بگیرد. مثلاً اگر بداند 'آب آتش را خاموش می‌کند'، نتیجه می‌گیرد که برای عبور از آتش باید از آب استفاده کند.",
  },
  {
    id: "aidq12",
    question: "تفاوت اصلی 'ماشین حالت (FSM)' و 'درخت رفتار (BT)' چیست؟",
    answer:
      "'ماشین حالت' مثل یک کلید برق است؛ در هر لحظه فقط یک حالت دارد (یا روشن یا خاموش) و برای کارهای ساده خوب است. 'درخت رفتار' مثل یک لیست اولویت‌بندی شده از کارهاست که هر لحظه چک می‌شود و برای تصمیمات پیچیده بسیار انعطاف‌پذیرتر است.",
  },
  {
    id: "aidq13",
    question:
      "نقش گره 'انتخاب‌گر (Selector)' و 'توالی (Sequence)' در درخت رفتار چیست؟",
    answer:
      "گره 'توالی' (Sequence) نقش 'و' منطقی را دارد: باید تمام مراحل را به ترتیب انجام دهی (پیدا کردن کلید و رفتن سمت در). گره 'انتخاب‌گر' (Selector) نقش 'یا' منطقی را دارد: اولین کار موفق را انجام می‌دهد (با شمشیر حمله کن یا اگر نداری، فرار کن).",
  },
  {
    id: "aidq14",
    question:
      "الگوریتم 'تپه‌نوردی (Hill Climbing)' چگونه کار می‌کند و مشکل اصلی آن چیست؟",
    answer:
      "فکر کنید در مه غلیظی روی یک تپه هستید و می‌خواهید به بلندترین نقطه برسید. شما در هر قدم، به سمتی حرکت می‌کنید که سربالایی باشد. مشکل اصلی‌اش این است که ممکن است به قله یک تپه کوچک (بهینه محلی) برسید و فکر کنید به بلندترین نقطه رسیده‌اید.",
  },
  {
    id: "aidq15",
    question: "اجزای اصلی یک مسئله برنامه‌ریزی در هوش مصنوعی کدامند؟",
    answer:
      "اجزای اصلی برنامه‌ریزی مثل یک دستور آشپزی هستند: ۱. وضعیت اولیه (مواد اولیه شما)، ۲. هدف (غذای نهایی)، ۳. اعمال (مراحل پخت و پز)، و ۴. برنامه (ترتیب دقیق مراحل).",
  },
  {
    id: "aidq16",
    question: "نقش گره‌ها، شاخه‌ها و برگ‌ها در یک درخت تصمیم چیست؟",
    answer:
      "در یک درخت تصمیم، 'گره‌ها' همان سوال‌ها یا معیارها هستند (مثلاً 'آیا هوا بارانی است؟'). 'شاخه‌ها' پاسخ‌های ممکن به سوالات هستند ('بله' یا 'خیر'). 'برگ‌ها' نیز نتیجه نهایی یا تصمیمی هستند که گرفته می‌شود (مثلاً 'چتر بردار').",
  },
  {
    id: "aidq17",
    question:
      "تفاوت محیط چندعاملی 'متخاصم' (Adversarial) و 'همکارانه' (Collaborative) چیست؟",
    answer:
      "در محیط 'متخاصم'، عامل‌ها علیه یکدیگر عمل می‌کنند، مثل بازی شطرنج. در محیط 'همکارانه'، عامل‌ها برای رسیدن به یک هدف مشترک با هم همکاری می‌کنند، مثل بازیکنان یک تیم فوتبال.",
  },
  {
    id: "aidq18",
    question:
      "'مدل درونی' در یک عامل واکنشی با حافظه چیست و چه کمکی به عامل می‌کند؟",
    answer:
      "'مدل درونی' مثل حافظه یا نقشه ذهنی عامل از دنیاست. این مدل به عامل کمک می‌کند تا وضعیت‌هایی که مستقیماً نمی‌بیند را پیگیری کند و تصمیمات بهتری بر اساس تاریخچه اطلاعات بگیرد.",
  },
  {
    id: "aidq19",
    question:
      "منظور از جستجوی 'فراابتکاری' (Metaheuristic) چیست و یک مثال از آن نام ببرید.",
    answer:
      "جستجوی 'فراابتکاری' به روش‌های هوشمندانه‌ای گفته می‌شود که با الهام از طبیعت، به دنبال پیدا کردن راه‌حل‌های 'به اندازه کافی خوب' برای مسائل پیچیده هستند. یک مثال معروف آن 'الگوریتم ژنتیک' است که از فرگشت طبیعی الهام گرفته شده است.",
  },
  {
    id: "aidq20",
    question:
      "منطق 'اگر... آنگاه...' در پروژه‌های دیجیتال چگونه پیاده‌سازی می‌شود؟",
    answer:
      "این منطق معمولاً با استفاده از دستورات شرطی (Conditional Statements) در زبان‌های برنامه‌نویسی پیاده‌سازی می‌شود. مثلاً در ابزارهایی مانند Unity، Unreal Engine یا حتی Scratch، از بلوک‌های 'if... then...' برای تعریف این قوانین استفاده می‌شود.",
  },
  {
    id: "aidq21",
    question:
      "یک ربات نظافتچی را در نظر بگیرید. یک درخت رفتار ساده برای آن طراحی کنید که سه اولویت داشته باشد: ۱. بازگشت به شارژر اگر باتری کم است، ۲. تمیز کردن زباله اگر زباله‌ای دید، ۳. گشت‌زنی در محیط.",
    answer:
      "ریشه درخت یک گره 'انتخاب‌گر' (Selector) است. فرزند اول (بالاترین اولویت) یک 'توالی' است که چک می‌کند 'آیا باتری کم است؟' و سپس 'به سمت شارژر برو'. فرزند دوم یک 'توالی' دیگر است که چک می‌کند 'آیا زباله دیده می‌شود؟' و سپس 'آن را تمیز کن'. فرزند سوم (رفتار پیش‌فرض) عمل 'گشت‌زنی' است.",
  },
  {
    id: "aidq22",
    question:
      "یک مثال جدید از عامل مبتنی بر سودمندی که در جزوه نباشد بزنید و تابع سودمندی آن را به طور کیفی توضیح دهید.",
    answer:
      "یک سیستم مدیریت سرمایه‌گذاری هوشمند. این عامل فقط به دنبال سود نیست (هدف‌محور). تابع سودمندی آن ترکیبی از 'میزان سود'، 'میزان ریسک' و 'میزان نقدشوندگی' سهام را می‌سنجد تا بهترین و متعادل‌ترین گزینه را برای سرمایه‌گذاری انتخاب کند.",
  },
  {
    id: "aidq23",
    question:
      "چرا یک ماشین حالت برای کنترل شخصیت اصلی یک بازی جهان-باز مدرن انتخاب ضعیفی است؟",
    answer:
      "چون شخصیت اصلی می‌تواند صدها کار مختلف را به صورت ترکیبی انجام دهد (راه برود، بپرد، شنا کند، صحبت کند، بجنگد). مدیریت این تعداد حالت و انتقال‌های بین آن‌ها در یک ماشین حالت، فوق‌العاده پیچیده و غیرقابل نگهداری می‌شود و به 'اسپاگتی کد' منجر خواهد شد.",
  },
  {
    id: "aidq24",
    question:
      "یک دانشجو می‌خواهد بین سه پروژه (موشن‌گرافیک، بازی کوتاه، وبسایت تعاملی) یکی را انتخاب کند. معیارهایش علاقه و مهارت است. یک درخت تصمیم ساده برای او طراحی کنید.",
    answer:
      "ریشه درخت (سوال اول): 'آیا به کدنویسی علاقه داری؟'. شاخه 'بله': سوال دوم: 'آیا مهارت طراحی بازی داری؟' -> ('بله': بازی کوتاه، 'خیر': وبسایت تعاملی). شاخه 'خیر' از سوال اول: نتیجه نهایی -> 'موشن‌گرافیک'.",
  },
  {
    id: "aidq25",
    question:
      "چگونه استنتاج منطقی می‌تواند نورپردازی یک صحنه انیمیشن را هوشمند کند؟",
    answer:
      "با تعریف قوانین منطقی. قانون ۱: 'اگر شخصیت شرور وارد شود، نورپردازی باید مرموز باشد'. قانون ۲: 'نورپردازی از پایین، مرموز است'. سیستم با استنتاج نتیجه می‌گیرد که هنگام ورود شخصیت شرور، باید به طور خودکار نور را از پایین به چهره او بتاباند تا حس ترس منتقل شود.",
  },
  {
    id: "aidq26",
    question:
      "محیط بازی 'دوز' (Tic-Tac-Toe) را از نظر ایستا/پویا و قطعی/تصادفی تحلیل کنید.",
    answer:
      "محیط 'ایستا' است، چون صفحه بازی خود به خود تغییر نمی‌کند و منتظر حرکت بازیکن می‌ماند. همچنین 'قطعی' است، چون نتیجه هر حرکت (قرار دادن X یا O در یک خانه) کاملاً مشخص و بدون هیچ شانسی است.",
  },
  {
    id: "aidq27",
    question:
      "یک ماشین حالت ساده برای یک NPC دشمن با سه حالت 'گشت‌زنی'، 'تعقیب' و 'حمله' طراحی کنید. ورودی‌های انتقال را مشخص کنید.",
    answer:
      "حالت پیش‌فرض 'گشت‌زنی' است. اگر ورودی 'دیدن بازیکن' اتفاق بیفتد، به حالت 'تعقیب' می‌رود. در حالت 'تعقیب'، اگر ورودی 'بازیکن در محدوده حمله قرار گرفت' رخ دهد، به حالت 'حمله' می‌رود. از حالت 'حمله' یا 'تعقیب'، با ورودی 'گم کردن بازیکن'، به حالت 'گشت‌زنی' بازمی‌گردد.",
  },
  {
    id: "aidq28",
    question:
      "یک سناریو مثال بزنید که در آن عامل واکنشی با حافظه موفق عمل می‌کند اما عامل واکنشی ساده شکست می‌خورد.",
    answer:
      "یک ربات در یک راهروی بی‌انتها که باید به چپ یا راست بپیچد. عامل واکنشی ساده با دیدن دیوار می‌پیچد و ممکن است تا ابد بین دو دیوار رفت و برگشت کند. عامل با حافظه به خاطر می‌سپارد که این مسیر را قبلاً آمده و راه دیگری را انتخاب می‌کند.",
  },
  {
    id: "aidq29",
    question:
      "یک NPC باید کلیدی را از یک صندوق بردارد تا دری را باز کند. این مسئله را به یک مسئله برنامه‌ریزی ساده تبدیل کنید (وضعیت اولیه، هدف و اعمال).",
    answer:
      "وضعیت اولیه: 'NPC در اتاق ۱، در قفل است، کلید در صندوق است'. هدف: 'در باز است'. اعمال ممکن: 'رفتن به اتاق دیگر'، 'باز کردن صندوق'، 'برداشتن کلید'، 'باز کردن در'. برنامه نهایی توالی صحیح این اعمال خواهد بود.",
  },
  {
    id: "aidq30",
    question:
      "یک مثال جدید برای محیط مشاهده‌پذیر جزئی که در جزوه نباشد بزنید و توضیح دهید چرا جزئی است.",
    answer:
      "بازی 'کشتی جنگی' (Battleship). محیط مشاهده‌پذیر جزئی است زیرا شما از موقعیت کشتی‌های حریف خود خبر ندارید و باید بر اساس حدس و اطلاعات قبلی (جاهایی که قبلاً شلیک کرده‌اید) تصمیم بگیرید که به کدام خانه شلیک کنید.",
  },
];
